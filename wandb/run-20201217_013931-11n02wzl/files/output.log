2020-12-17 01:39:33.007 INFO:	gpus = [0]
2020-12-17 01:39:33.079 INFO:	gpu device = 0
2020-12-17 01:39:33.079 INFO:	args = Namespace(arch_learning_rate=0.0003, arch_search_method='GDAS', arch_weight_decay=0.001, batch_size=128, cutout=False, cutout_length=16, data='../data', drop_path_prob=0.3, epochs=300, gpu='0', grad_clip=5, init_channels=16, layers=8, learning_rate=0.025, learning_rate_min=0.001, model_path='saved_models', momentum=0.9, optimization='MiLeNAS', report_freq=50, save='search-EXP-20201217-013931', seed=2, tau_max=10.0, tau_min=1.0, train_portion=0.5, unrolled=True, weight_decay=0.0003)
2020-12-17 01:39:34.949 INFO:	param size = 1.930842MB
Files already downloaded and verified
/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:508: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
2020-12-17 01:39:35.612 INFO:	epoch 0 lr 2.500000e-02
2020-12-17 01:39:35.614 INFO:	genotype = Genotype(normal=[('dil_conv_5x5', 1, 0.12510982155799866), ('sep_conv_3x3', 0, 0.12510918080806732), ('dil_conv_3x3', 2, 0.12516863644123077), ('dil_conv_5x5', 1, 0.12513791024684906), ('avg_pool_3x3', 1, 0.12522174417972565), ('dil_conv_5x5', 2, 0.12511184811592102), ('dil_conv_3x3', 0, 0.12528343498706818), ('max_pool_3x3', 3, 0.12528221309185028)], normal_concat=range(2, 6), reduce=[('avg_pool_3x3', 1, 0.12522292137145996), ('sep_conv_5x5', 0, 0.12512429058551788), ('dil_conv_5x5', 0, 0.1254260390996933), ('sep_conv_3x3', 1, 0.12516769766807556), ('max_pool_3x3', 0, 0.1251889169216156), ('avg_pool_3x3', 2, 0.1251487284898758), ('sep_conv_3x3', 4, 0.12518329918384552), ('sep_conv_3x3', 0, 0.12515242397785187)], reduce_concat=range(2, 6))
tensor([[0.1250, 0.1247, 0.1251, 0.1250, 0.1251, 0.1251, 0.1250, 0.1250],
        [0.1249, 0.1250, 0.1250, 0.1249, 0.1249, 0.1251, 0.1251, 0.1251],
        [0.1251, 0.1250, 0.1250, 0.1251, 0.1248, 0.1251, 0.1248, 0.1251],
        [0.1250, 0.1250, 0.1251, 0.1249, 0.1249, 0.1250, 0.1250, 0.1251],
        [0.1248, 0.1250, 0.1249, 0.1249, 0.1249, 0.1251, 0.1252, 0.1251],
        [0.1249, 0.1250, 0.1249, 0.1250, 0.1251, 0.1251, 0.1250, 0.1250],
        [0.1249, 0.1249, 0.1252, 0.1251, 0.1250, 0.1250, 0.1250, 0.1249],
        [0.1250, 0.1248, 0.1251, 0.1250, 0.1250, 0.1250, 0.1251, 0.1251],
        [0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1251, 0.1249],
        [0.1249, 0.1249, 0.1249, 0.1250, 0.1249, 0.1250, 0.1253, 0.1251],
        [0.1249, 0.1251, 0.1251, 0.1250, 0.1249, 0.1249, 0.1249, 0.1251],
        [0.1250, 0.1250, 0.1252, 0.1251, 0.1249, 0.1249, 0.1250, 0.1249],
        [0.1249, 0.1253, 0.1250, 0.1248, 0.1248, 0.1251, 0.1251, 0.1250],
        [0.1249, 0.1251, 0.1251, 0.1252, 0.1250, 0.1248, 0.1250, 0.1249]],
       device='cuda:0', grad_fn=<SoftmaxBackward>)
tensor([[0.1251, 0.1250, 0.1250, 0.1250, 0.1249, 0.1251, 0.1249, 0.1250],
        [0.1249, 0.1248, 0.1252, 0.1247, 0.1251, 0.1249, 0.1252, 0.1251],
        [0.1249, 0.1249, 0.1251, 0.1250, 0.1248, 0.1250, 0.1249, 0.1254],
        [0.1251, 0.1250, 0.1250, 0.1250, 0.1252, 0.1250, 0.1249, 0.1250],
        [0.1251, 0.1249, 0.1250, 0.1250, 0.1251, 0.1249, 0.1250, 0.1251],
        [0.1251, 0.1252, 0.1251, 0.1247, 0.1252, 0.1249, 0.1249, 0.1250],
        [0.1251, 0.1251, 0.1251, 0.1250, 0.1247, 0.1250, 0.1251, 0.1250],
        [0.1250, 0.1249, 0.1251, 0.1250, 0.1250, 0.1248, 0.1251, 0.1248],
        [0.1252, 0.1251, 0.1250, 0.1250, 0.1249, 0.1249, 0.1250, 0.1250],
        [0.1248, 0.1249, 0.1250, 0.1249, 0.1252, 0.1250, 0.1251, 0.1251],
        [0.1252, 0.1249, 0.1250, 0.1250, 0.1250, 0.1249, 0.1250, 0.1251],
        [0.1249, 0.1251, 0.1250, 0.1250, 0.1250, 0.1251, 0.1250, 0.1249],
        [0.1249, 0.1249, 0.1251, 0.1251, 0.1246, 0.1251, 0.1251, 0.1251],
        [0.1250, 0.1247, 0.1250, 0.1251, 0.1252, 0.1250, 0.1250, 0.1250]],
       device='cuda:0', grad_fn=<SoftmaxBackward>)
2020-12-17 01:39:37.058 INFO:	train 000 2.332813e+00 11.718750 48.437500
Traceback (most recent call last):
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/multiprocessing/queues.py", line 245, in _feed
    send_bytes(obj)
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/multiprocessing/connection.py", line 411, in _send_bytes
    self._send(header + buf)
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
Traceback (most recent call last):
  File "./search_algorithm/train_gdas.py", line 281, in <module>
    main()
  File "./search_algorithm/train_gdas.py", line 177, in main
    train_acc, train_obj = train(epoch, train_queue, valid_queue, model, architect, criterion, optimizer, lr)
  File "./search_algorithm/train_gdas.py", line 215, in train
    input_search, target_search = next(iter(valid_queue))
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 435, in __next__
    data = self._next_data()
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1068, in _next_data
    idx, data = self._get_data()
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1024, in _get_data
    success, data = self._try_get_data()
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 872, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/queue.py", line 179, in get
    self.not_empty.wait(remaining)
  File "/home/chaoyanghe/miniconda/envs/milenas/lib/python3.8/threading.py", line 306, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
